import 'dart:async';import 'package:easy_localization/easy_localization.dart';import 'package:flutter/cupertino.dart';import 'package:flutter/material.dart';///输入框///title 左边标题///hintText 默认文字///marginEdg 边距class GCInputWidght extends StatelessWidget{  String title;  String hintText;  EdgeInsets marginEdg;  GCInputWidght({required this.title,required this.hintText,required this.marginEdg});  @override  Widget build(BuildContext context) {    // TODO: implement build    return Container(      margin: this.marginEdg,      decoration: BoxDecoration(        ///单独底部一条线        border: Border(bottom: BorderSide(width: 1,color: Color(0xFFE4E4E4)))      ),      child: Row(        mainAxisAlignment: MainAxisAlignment.center,        children: [            Container(              child: Text(tr(this.title),                style: TextStyle(                    fontSize: 16,                    color: Color(0xFF333333),                    fontWeight: FontWeight.w500                ),              ),              margin: EdgeInsets.only(bottom: 5),              width: 100,            ),          Expanded(              child: Container(                  // color: Colors.blue,                   child: TextField(                      decoration: InputDecoration(                      hintText: tr(this.hintText),                      border: InputBorder.none,                          contentPadding: EdgeInsets.only(bottom: 15)                    ),                     style: TextStyle(                       fontSize: 14                     ),                   ),                  margin:EdgeInsets.only(left: 15) ,                  height: 30,                  alignment: Alignment.centerLeft,              )          )        ],      ),    );  }}///验证码输入框class GCCodeInputWidget extends StatefulWidget{  EdgeInsets marginEdg;  String hintText = "";  String title = "";  GCCodeInputWidget({required this.marginEdg, hintText, title}):super();  @override  State<StatefulWidget> createState() {    // TODO: implement createState    return GCCodeInputState();  }}class GCCodeInputState extends State<GCCodeInputWidget>{  bool? waitCode;  String? codeString;  Timer? _timer;  var countdownTime = 0;  void changeCodeState(){    countdownTime = 5;    final call = (timer) {      setState(() {        if (countdownTime < 1) {          codeString = tr("send_code");          _timer!.cancel();        }else{          countdownTime -= 1;          ///字符串+参数 '$xxx'          codeString = '${countdownTime}s${tr('resend_code')}';        }      });    };    _timer = Timer.periodic(Duration(seconds: 1), call);  }  @override  Widget build(BuildContext context) {    // TODO: implement build    return Container(      margin: widget.marginEdg,      decoration: BoxDecoration(        border: Border(bottom: BorderSide(width: 1,color: Color(0xFFE4E4E4)))      ),      child: Row(        mainAxisAlignment: MainAxisAlignment.start,        crossAxisAlignment: CrossAxisAlignment.center,        children: [          Container(child: Text(widget.title==null?tr('phone_text'):widget.title,            style: TextStyle(                fontSize: 16,                color: Color(0xFF333333),                fontWeight: FontWeight.w500            ),          ),            width: 100,            alignment: Alignment.centerLeft,          ),          Expanded(child: Container(            child: TextField(              decoration: InputDecoration(                  hintText: widget.hintText == null? tr('phone_hint_text'):widget.hintText,                  border: InputBorder.none,                  contentPadding: EdgeInsets.only(bottom: 12)              ),              style: TextStyle(                fontSize: 14              ),            ),            margin:EdgeInsets.only(left: 15) ,            height: 30,            alignment: Alignment.centerLeft,          )),          Container(            width: 1,            height: 17,            color: Color(0xFFE4E4E4),            alignment: Alignment.center,          ),          Container(            child: GestureDetector(              child: Text((countdownTime==0?tr('code_text'):codeString)!,                style: TextStyle(                    fontSize: 16,                    color: Color(0xFF333333),                    fontWeight: FontWeight.w500,                ),                textAlign: TextAlign.center,              ),              onTap: (){                if(countdownTime == 0){                  changeCodeState();                }              },            ),            margin: EdgeInsets.only(left: 10),          )        ],      ),    );  }}
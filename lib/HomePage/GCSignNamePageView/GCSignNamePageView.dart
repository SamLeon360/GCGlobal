import 'dart:convert';import 'dart:io';import 'dart:typed_data';import 'package:dio/dio.dart';import 'package:easy_localization/easy_localization.dart';import 'package:flutter/cupertino.dart';import 'package:flutter/material.dart';import 'package:flutter/services.dart';import 'package:flutter_easyloading/flutter_easyloading.dart';import 'package:path_provider/path_provider.dart';import 'package:signature/signature.dart';import 'dart:ui' as ui;class GCSignNamePageView extends StatefulWidget{  Image? signImage ;  @override  State<StatefulWidget> createState() {    // TODO: implement createState    return GCSignNameState();  }}class GCSignNameState extends State<GCSignNamePageView>{  final SignatureController _controller = SignatureController(    penStrokeWidth: 2,    penColor: Colors.black,    exportBackgroundColor: Color(0x00000000),    onDrawStart: (){    },    onDrawEnd: (){    },  );  @override  void initState() {    // TODO: implement initState    super.initState();    SystemChrome.setPreferredOrientations([      DeviceOrientation.landscapeLeft,      DeviceOrientation.landscapeRight    ]);    _controller.addListener(() => print('Value changed'));  }  @override  Widget build(BuildContext context) {    // TODO: implement build    return Container(      color: Colors.white,      child: SafeArea(child: Container(        decoration: BoxDecoration(            color: Colors.white        ),        child: Stack(          children: [            Positioned(child: Column(              children: [                Container(                  height: 44,                  child: Row(                    crossAxisAlignment: CrossAxisAlignment.center,                    children: [                      Container(                        height: 24,width: 24,                        margin: EdgeInsets.only(left: 15),                        decoration: BoxDecoration(                            image: DecorationImage(                                image: AssetImage("assets/homepage/left_anchor/icon_zuojiantou_H@3x.png")                            )                        ),                      ),                      Expanded(child: Text(                        tr("簽寫姓名"),                        style: TextStyle(                            fontSize: 18,                            color: Color(0xFF333333),                            fontWeight: FontWeight.w500                        ),                        textAlign: TextAlign.center,                      )),                      GestureDetector(                        child: Container(                          height: 44,                          padding: EdgeInsets.only(right: 20),                          child: Text(                            tr("確定"),                            style: TextStyle(                                fontSize: 16,                                color: Color(0xFF333333),                                fontWeight: FontWeight.w500                            ),                          ),                          alignment: Alignment.centerRight,                        ),                        onTap: () async {                          final Uint8List? data = await _controller.toPngBytes();                          ui.Image? image  = await _controller.toImage();                          Directory appDocDir = await getApplicationDocumentsDirectory();                          String appDocPath = appDocDir.path;                          var pngBytes = await image!.toByteData(format: ui.ImageByteFormat.png);                          String path = appDocPath +"/"+formattedDate()+".png";                          File(path).writeAsBytesSync(pngBytes!.buffer.asInt8List());                          var dio = Dio();                          EasyLoading.show(status: 'uploading...');                          print(data);                          var formData = FormData.fromMap({                            "file": await MultipartFile.fromFile(path)                          });                          print(formData.fields);                          var response = await dio.post('http://gcglobalcrm.hb.123nat.com/Uploads/UploadImage', data: formData);                          dynamic rep = jsonDecode(response.data);                          if(response.statusCode == 200){                            print("data==${response.data}");                            EasyLoading.dismiss();                          }else{                            print("失败了");                            EasyLoading.dismiss();                          }                        },                      )                    ],                  ),                ),                Container(                  child:  Signature(                    controller: _controller,                    backgroundColor: Color(0xFFf4f4f4),                  ),                ),              ],            ),),            Align(              alignment: Alignment.center,              child: Text(                tr("請在灰色區域中簽名"),                style: TextStyle(                    fontSize: 24,                    color: Color(0xFFC5C5C5),                ),                textAlign: TextAlign.center,              ),            )          ],        )      )),    );  }  String formattedDate() {    DateTime dateTime = DateTime.now();    String dateTimeString = 'Signature_' +        dateTime.year.toString() +        dateTime.month.toString() +        dateTime.day.toString() +        dateTime.hour.toString() +        ':' + dateTime.minute.toString() +        ':' + dateTime.second.toString() +        ':' + dateTime.millisecond.toString() +        ':' + dateTime.microsecond.toString();    return dateTimeString;  }}
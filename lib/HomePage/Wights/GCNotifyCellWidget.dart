import 'package:easy_localization/easy_localization.dart';import 'package:flutter/cupertino.dart';import 'package:flutter/material.dart';import 'package:flutter_slidable/flutter_slidable.dart';class GCNotifyCellWidget extends StatefulWidget{  bool isNew = false;  ///管理模式  bool showEdit = false;  ///选择删除  bool showSelectIcon = false;  ///左滑删除控件  VoidCallback deleteCallBack;  GCNotifyCellWidget({required this.showEdit,required this.showSelectIcon,required this.deleteCallBack}):super();  @override  State<StatefulWidget> createState() {    // TODO: implement createState    return GCNotifyCellState();  }}class GCNotifyCellState extends State<GCNotifyCellWidget>{  SlidableController slidableController = new SlidableController();  Animation<double>? _rotationAnimation;  Color _fabColor = Colors.blue;  void handleSlideAnimationChanged(Animation<double>? slideAnimation) {    setState(() {      _rotationAnimation = slideAnimation;    });  }  void handleSlideIsOpenChanged(bool? isOpen) {    setState(() {      _fabColor = isOpen! ? Colors.green : Colors.blue;    });  }  @override  void initState() {    // TODO: implement initState    slidableController = SlidableController(      onSlideAnimationChanged:handleSlideAnimationChanged,      onSlideIsOpenChanged: handleSlideIsOpenChanged    );    super.initState();  }  @override  Widget build(BuildContext context) {    // TODO: implement build    return Slidable(      key: Key("asd"),      controller: slidableController,      actionPane: SlidableScrollActionPane(),      direction: Axis.horizontal,      child: Container(        height: 85,        child:Row(          children: [            ///新消息紅色圓圈            widget.showEdit?(widget.showSelectIcon?Container(              alignment: Alignment.center,              padding: EdgeInsets.only(left: 15),              child: Container(                height: 12,width: 12,                decoration: BoxDecoration(                    shape: BoxShape.circle,                    border: Border.all(color: Color(0xFF979797))                ),              ),            ):Container(              alignment: Alignment.center,              padding: EdgeInsets.only(left: 15),              child: Container(                height: 12,width: 12,                decoration: BoxDecoration(                    shape: BoxShape.circle,                    border: Border.all(color: Color(0xFF007AFF)),                    color: Color(0xFF007AFF)                ),              ),            )):Container(              alignment: Alignment.center,              padding: EdgeInsets.only(left: 15),              child: Container(                height: 12,width: 12,                decoration: BoxDecoration(                    shape: BoxShape.circle,                    color: Color(0xFFDA0000)                ),              ),            ),            Container(              margin: EdgeInsets.only(left: 11,right: 15),              decoration: BoxDecoration(                  border: Border(bottom: BorderSide(color: Color(0xFFE4E4E4)))              ),              child: Row(                children: [                  Container(                    height: 46,width: 46,                    decoration: BoxDecoration(                        color: Color(0xFFDA0000),                        image: DecorationImage(                          ///行程提醒                            image: AssetImage("assets/homepage/tripalert/icon_xingchengtixing@2x.png"),                            fit:BoxFit.contain                        )                    ),                  ),                  Container(                    alignment:Alignment.centerRight,                    margin: EdgeInsets.only(right: 0),                    child: Column(                      crossAxisAlignment: CrossAxisAlignment.start,                      mainAxisAlignment: MainAxisAlignment.start,                      children: [                        ///標題 時間                        Container(                          margin:EdgeInsets.only(left: 10,right: 0,top: 21),                          child: Row(                            children: [                              Text(                                tr("計劃提醒"),                                textAlign: TextAlign.start,                                style: TextStyle(                                    fontSize: 14,                                    color: Color(0xFF333333),                                    fontWeight: FontWeight.w500                                ),                              ),                              Spacer(),                              Text(                                "現在",                                textAlign: TextAlign.end,                                style: TextStyle(                                    fontSize: 12,                                    color: Color(0xFF666666)                                ),                              )                            ],                          ),                          width: MediaQuery.of(context).size.width - 109,                        ),                        ///內容                        Container(                          width: MediaQuery.of(context).size.width - 130,                          margin: EdgeInsets.only(left: 10,top: 10),                          child: Text(                            "你的計劃將於半小時後開始，請注意安排時間！",                            overflow:TextOverflow.ellipsis,                            softWrap: false, //不换行                            maxLines: 1,                            style: TextStyle(                                fontSize: 12,                                color: Color(0xFF666666)                            ),                          ),                        )                      ],                    ),                  )                ],              ),            )          ],        ) ,      ),      dismissal: SlidableDismissal(        child: SlidableDrawerDismissal(),        onDismissed: (actionType){        },      ),      secondaryActions: [        IconSlideAction(          caption: 'Delete',          color: Colors.red,          icon: Icons.delete,          onTap: () => widget.deleteCallBack(),        )      ],    );  }}
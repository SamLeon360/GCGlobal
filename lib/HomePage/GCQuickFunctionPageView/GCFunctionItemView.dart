import 'package:flutter/cupertino.dart';import 'package:flutter/material.dart';import 'package:flutter_slidable/flutter_slidable.dart';class GCFunctionItemView extends StatefulWidget{  String functionName;  String functionIcon;  bool showMoveIcon = true;  final Key? key;  ///左滑删除控件  VoidCallback? deleteCallBack;  GCFunctionItemView({ this.key,required this.functionName,required this.functionIcon,required this.showMoveIcon,deleteCallBack}):super();  @override  State<StatefulWidget> createState() {    // TODO: implement createState    return GCFunctionItemState();  }}class GCFunctionItemState extends State<GCFunctionItemView>{  SlidableController? slidableController;  @override  void initState() {    // TODO: implement initState    slidableController = new SlidableController(        onSlideAnimationChanged:handleSlideAnimationChanged,        onSlideIsOpenChanged: handleSlideIsOpenChanged    );    super.initState();  }  Animation<double>? _rotationAnimation;  Color _fabColor = Colors.blue;  void handleSlideAnimationChanged(Animation<double>?slideAnimation) {    setState(() {      _rotationAnimation = slideAnimation;    });  }  void handleSlideIsOpenChanged(bool? isOpen) {    setState(() {      _fabColor = isOpen! ? Colors.green : Colors.blue;    });  }  @override  Widget build(BuildContext context) {    // TODO: implement build    return Slidable(key: widget.key, child: Container(      width: MediaQuery.of(context).size.width,      height: 48,      decoration: BoxDecoration(        border: Border(bottom: BorderSide(color: Color(0xFFF4F4F4),width: 2)),        color: Colors.white,      ),      child: Row(        ///row 主軸是水平main , 副軸是垂直cross        crossAxisAlignment: CrossAxisAlignment.center,        children: [          Container(            width: 16,            height: 16,            margin: EdgeInsets.only(left: 15),            decoration: BoxDecoration(                image: DecorationImage(                    image: AssetImage("assets/homepage/yichu/icon_yichu@2x.png")                )            ),          ),          Container(            width: 24,            height: 24,            margin: EdgeInsets.only(left: 10),            decoration: BoxDecoration(                image: DecorationImage(                    image: AssetImage(widget.functionIcon)                )            ),          ),          Expanded(child: Container(            height: 20,            margin: EdgeInsets.only(left: 12),            child: Text(              widget.functionName,              style: TextStyle(                fontSize: 14,                color: Color(0xFF333333),              ),              textAlign: TextAlign.left,            ),          )),          widget.showMoveIcon?Container(            height: 16,            width: 16,            margin: EdgeInsets.only(left: 15,right: 24),            decoration: BoxDecoration(                image: DecorationImage(                    image: AssetImage("assets/homepage/yidong/icon_yidong@2x.png")                )            ),          ):Container(            height: 16,            width: 16,          )        ],      ),    ),      actionPane: SlidableScrollActionPane(),      secondaryActions: [        IconSlideAction(          caption: 'Delete',          color: Colors.red,          icon: Icons.delete,          onTap: () => widget.deleteCallBack!(),        )      ],      dismissal: SlidableDismissal(        child: SlidableDrawerDismissal(),        onDismissed: (actionType){        },      ),      direction: Axis.horizontal,      controller: slidableController,    );  }}
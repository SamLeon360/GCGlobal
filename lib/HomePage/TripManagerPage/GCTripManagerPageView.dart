import 'package:gcglobal/Widghts/Calender/src/customization/calendar_style.dart';import 'package:intl/date_symbol_data_local.dart';import 'package:easy_localization/easy_localization.dart';import 'package:flutter/cupertino.dart';import 'package:flutter/material.dart';import 'package:gcglobal/Widghts/Calender/src/shared/utils.dart';import 'package:gcglobal/Widghts/Calender/src/table_calendar.dart';import 'package:gcglobal/Widghts/GCNavBar.dart';import 'utils.dart';class GCTripManagerPageView extends StatefulWidget{  @override  State<StatefulWidget> createState() {    // TODO: implement createState    return GCTripManagerState();  }}class GCTripManagerState extends State<GCTripManagerPageView>{  late final ValueNotifier<List<Event>> _selectedEvents;  CalendarFormat _calendarFormat = CalendarFormat.month;  RangeSelectionMode _rangeSelectionMode = RangeSelectionMode      .toggledOff; // Can be toggled on/off by longpressing a date  DateTime _focusedDay = DateTime.now();  DateTime? _selectedDay;  DateTime? _rangeStart;  DateTime? _rangeEnd;  @override  void initState() {    super.initState();    initializeDateFormatting();    _selectedDay = _focusedDay;    _selectedEvents = ValueNotifier(_getEventsForDay(_selectedDay!));  }  @override  void dispose() {    _selectedEvents.dispose();    super.dispose();  }  List<Event> _getEventsForDay(DateTime day) {    // Implementation example    return kEvents[day] ?? [];  }  List<Event> _getEventsForRange(DateTime start, DateTime end) {    // Implementation example    final days = daysInRange(start, end);    return [      for (final d in days) ..._getEventsForDay(d),    ];  }  void _onDaySelected(DateTime selectedDay, DateTime focusedDay) {    if (!isSameDay(_selectedDay, selectedDay)) {      setState(() {        _selectedDay = selectedDay;        _focusedDay = focusedDay;        _rangeStart = null; // Important to clean those        _rangeEnd = null;        _rangeSelectionMode = RangeSelectionMode.toggledOff;      });      _selectedEvents.value = _getEventsForDay(selectedDay);    }  }  void _onRangeSelected(DateTime? start, DateTime? end, DateTime focusedDay) {    setState(() {      _selectedDay = null;      _focusedDay = focusedDay;      _rangeStart = start;      _rangeEnd = end;      _rangeSelectionMode = RangeSelectionMode.toggledOn;    });    // `start` or `end` could be null    if (start != null && end != null) {      _selectedEvents.value = _getEventsForRange(start, end);    } else if (start != null) {      _selectedEvents.value = _getEventsForDay(start);    } else if (end != null) {      _selectedEvents.value = _getEventsForDay(end);    }  }  @override  Widget build(BuildContext context) {    // TODO: implement build    return Scaffold(      appBar: PreferredSize(          preferredSize: Size(MediaQuery.of(context).size.width,45),          child:Container(            child: AppBar(              backgroundColor: Colors.transparent,              elevation: 0,              centerTitle: true,              title: Text(tr("商業貸款"),                style: TextStyle(fontSize: 18,),              ),              leading: IconButton(                icon: Icon(Icons.arrow_back_ios_outlined),                onPressed: (){                  Navigator.of(context).pop();                },              ),              // ignore: unnecessary_null_comparison              actions: [                GestureDetector(                  child: Container(                    margin: EdgeInsets.only(right: 15),                    height: 24,width: 24,                    decoration: BoxDecoration(                        image: DecorationImage(                            image: AssetImage("assets/homepage/today/icon_jinri@2x.png")                        )                    ),                  ),                  onTap: (){                  },                ),                GestureDetector(                  child: Container(                    margin: EdgeInsets.only(right: 15),                    height: 24,width: 24,                    decoration: BoxDecoration(                        image: DecorationImage(                            image: AssetImage("assets/homepage/add_xingcheng/icon_xinzengxingcheng_B@2x.png")                        )                    ),                  ),                  onTap: (){                  },                )              ],            ),            decoration: BoxDecoration(                image: DecorationImage(                    image: ExactAssetImage("assets/iOSNavBar/daohanglan.png"),                    fit: BoxFit.cover                )            ),          ),      ),      body: Container(        child: Column(          children: [            TableCalendar(              firstDay: DateTime.utc(2010, 10, 16),              lastDay: DateTime.utc(2030, 3, 14),              focusedDay: _focusedDay,              selectedDayPredicate: (day) => isSameDay(_selectedDay, day),              rangeStartDay: _rangeStart,              headerVisible: false,              daysOfWeekHeight: 44.0,              rangeEndDay: _rangeEnd,              calendarFormat: _calendarFormat,              rangeSelectionMode: _rangeSelectionMode,              onDaySelected:_onDaySelected,              startingDayOfWeek: StartingDayOfWeek.monday,              locale: 'en_US',              eventLoader: _getEventsForDay,              onFormatChanged: (format) {                if (_calendarFormat != format) {                  setState(() {                    _calendarFormat = format;                  });                }              },              onPageChanged: (focusedDay) {                _focusedDay = focusedDay;              },              calendarStyle: CalendarStyle(                outsideDaysVisible: false,                selectedDecoration:BoxDecoration(                  color: Color(0xFFFF2200),                  shape: BoxShape.circle                ),                markerDecoration: BoxDecoration(                  color:Color(0xFF007AFF),                    shape: BoxShape.circle                ),                markerMargin: EdgeInsets.only(top: 6),                markerSize: 6,                markersMaxCount: 1              ),            ),            Container(              height: 10,              color: Color(0xFFF4F4F4),              margin: EdgeInsets.only(bottom: 5),            ),            Expanded(              child: ValueListenableBuilder<List>(                valueListenable: _selectedEvents,                builder: (context, value, _) {                  return ListView.builder(                    itemCount: value.length,                    itemBuilder: (context, index) {                      return Container(                        margin: EdgeInsets.only(left: 15,right: 15),                        height: 86,                        decoration: BoxDecoration(                          border: Border(bottom: BorderSide(color: Color(0xFFE4E4E4)))                        ),                        child: Row(                          children: [                            Container(                              height: 8,width: 8,                              decoration: BoxDecoration(                                shape: BoxShape.circle,                                color: Color(0xFF007AFF),                              ),                            ),                            Expanded(                              child: Container(                                child: Column(                                  crossAxisAlignment: CrossAxisAlignment.start,                                  children: [                                    Row(                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,                                      crossAxisAlignment: CrossAxisAlignment.center,                                      children: [                                        Container(                                          alignment: Alignment.centerLeft,                                          width: MediaQuery.of(context).size.width-150,                                          margin: EdgeInsets.only(top: 20,left: 0),                                          child: Text(                                              "要同林小小去九龍推銷產品之後見客戶講解樓講解樓講解樓講解樓",                                              style: TextStyle(                                                color: Color(0xFF333333),                                                fontSize: 12,                                              ),                                              maxLines: 1,                                              overflow: TextOverflow.ellipsis,                                              textAlign: TextAlign.left                                          ),                                        ),                                        SizedBox(),                                        Container(                                          alignment:Alignment.centerRight,                                          margin:EdgeInsets.only(top: 20,right: 0),                                          child: Text(                                            "17:00-19:00",                                            style: TextStyle(                                              color: Color(0xFF666666),                                              fontSize: 14,                                            ),                                            maxLines: 1,                                            overflow: TextOverflow.ellipsis,                                          ),                                        ),                                      ],                                    ),                                    Expanded(                                      child: Container(                                        alignment: Alignment.centerLeft,                                        margin: EdgeInsets.only(top: 0,left: 0),                                        child: Text(                                            "要同林小小去九龍推銷產品之後見客戶講解樓講解樓講解樓講解樓",                                            style: TextStyle(                                              color: Color(0xFF666666),                                              fontSize: 12,                                            ),                                            maxLines: 1,                                            overflow: TextOverflow.ellipsis,                                            textAlign: TextAlign.left                                        ),                                      ),                                    ),                                  ],                                ),                                margin: EdgeInsets.only(left: 14),                              ),                            )                          ],                        ),                      );                    },                  );                },              ),            ),          ],        ),      ),    );  }}